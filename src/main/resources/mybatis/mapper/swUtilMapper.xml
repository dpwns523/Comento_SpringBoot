<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.setting_springboot.dao.SwUtilMapper">

    <resultMap id="TotCntOnDate" type="com.example.setting_springboot.dto.swutil.response.TotCntResponseDto">
        <result property="date" column="date"/>
        <result property="totCnt" column="totCnt"/>
    </resultMap>

    <resultMap id="MeanCntOnDays" type="com.example.setting_springboot.dto.swutil.response.MeanCntResponseDto">
        <result property="meanCnt" column="meanCnt"/>
    </resultMap>

    <resultMap id="TotCntOnDepDate" type="com.example.setting_springboot.dto.swutil.response.DepTotCntResponseDto">
        <result property="department" column="dep"/>
        <result property="date" column="date"/>
        <result property="totCnt" column="totCnt"/>
    </resultMap>


    <!-- 년월별 접속자 수   -->
    <select id="totCntOnYearMonth" resultMap="TotCntOnDate">
        select substring(`createDate`, 1, 4) as `date`, count(case when `requestcode`=#{yearRequestDto.requestCode} then 1 end) as `totCnt`
             , requestcode
        from statistc.requestinfo
        where substring(`createDate`, 1, 2)= #{yearRequestDto.year} and `requestcode` = #{yearRequestDto.requestCode}
        group by `date` order by `date` DESC;
    </select>

    <!--  일자별 접속자 수  -->
    <select id="totCntOnDate" resultMap="TotCntOnDate">
        select substring(`createDate`, 1, 6) as `date`, count(case when `requestcode`=#{yearMonthRequestDto.requestCode} then 1 end) as `totCnt`
        , requestcode
        from statistc.requestinfo
        where substring(`createDate`, 1, 4)= #{yearMonthRequestDto.yearMonth} and `requestcode` = #{yearMonthRequestDto.requestCode}
        group by `date`  order by `date` DESC;
    </select>
    <!--  하루 평균 접속자 수  -->
    <select id="meanCntOnDays" resultMap="MeanCntOnDays">
        select count(case when `requestcode` =#{requestDto.requestCode} then 1 end) / count(distinct substring(`createDate`, 1, 6)) as `meanCnt`, `requestcode`
        from statistc.requestinfo
        where `requestcode` = #{requestDto.requestCode};
    </select>

    <!-- 휴일을 제외한 로그인 수 (현재 버전은 휴일 포함)  -->
<!--    <select id="meanCntOnDays" resultMap="MeanCntOnDays">-->
<!--        select count(case when `requestcode` =#{requestDto.requestCode} then 1 end) as `totCnt`, `requestcode`-->
<!--        from statistc.requestinfo-->
<!--        where `requestcode` = #{requestDto.requestCode};-->
<!--    </select>-->

    <!-- 부서별 년월별 로그인 수 -->
    <select id="totCntOnDepYearMonth" resultMap="TotCntOnDepDate">
        select u.HR_ORGAN as `dep`, substring(ri.createDate, 1, 4) as `date`, count(case when ri.requestcode= #{yearRequestDto.requestCode} then 1 end) as `totCnt`, ri.requestcode
        from statistc.requestinfo as ri
        join statistc.user as u on u.userID = ri.userID
        where substring(ri.createDate, 1, 2)= #{yearRequestDto.year} and ri.requestcode = #{yearRequestDto.requestCode}
        group by u.HR_ORGAN, substring(ri.createDate, 1, 4)
        order by u.HR_ORGAN, substring(ri.createDate, 1, 4) DESC;
    </select>
</mapper>